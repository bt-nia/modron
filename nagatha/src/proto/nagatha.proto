syntax = "proto3";

// You may want to read https://google.aip.dev/general first.
// To compile: /usr/local/protoc/bin/protoc --plugin=/go/bin/protoc-gen-go --plugin=/go/bin/protoc-gen-go-grpc --plugin=/usr/local/bin/protoc-gen-grpc-web -I=proto/ --go_out=proto/. --grpc-web_out=import_style=typescript,mode=grpcweb:proto/ --go-grpc_out=proto/. proto/nagatha.proto


import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

option go_package = "./pb";

message Exception {
    string uuid = 1;
    string source_system = 2;
    string user_email = 3;
    string notification_name = 4;
    string justification = 5;
    google.protobuf.Timestamp created_on_time = 6;
    google.protobuf.Timestamp valid_until_time = 7;
}

message Notification {
    string uuid = 1;
    string source_system = 2;
    string name = 3;
    string recipient = 4;
    string content = 5;
    google.protobuf.Timestamp created_on = 6;
    google.protobuf.Timestamp sent_on = 7;
    google.protobuf.Duration interval = 8;
}

service Nagatha {
    rpc CreateNotification(CreateNotificationRequest) returns (Notification);

    rpc GetException(GetExceptionRequest) returns (Exception);
    rpc CreateException(CreateExceptionRequest)returns (Exception);
    rpc UpdateException(UpdateExceptionRequest) returns (Exception);
    rpc DeleteException(DeleteExceptionRequest) returns (google.protobuf.Empty);
    rpc ListExceptions(ListExceptionsRequest) returns (ListExceptionsResponse);

    rpc NotifyUser(NotifyUserRequest) returns (NotifyUserResponse);
    rpc NotifyAll(NotifyAllRequest) returns (NotifyAllResponse);
}

message CreateNotificationRequest {
    Notification notification = 1;
}

message GetExceptionRequest {
    string uuid = 1;
}

message CreateExceptionRequest {
    Exception exception = 1;
}

message UpdateExceptionRequest {
    Exception exception = 1;

    google.protobuf.FieldMask update_mask = 2;
}

message DeleteExceptionRequest {
    string uuid = 1;
}

message ListExceptionsRequest {
    string user_email = 1;

    int32 page_size = 2;

    string page_token = 3;
}

message ListExceptionsResponse {
    repeated Exception exceptions = 1;

    string next_page_token = 2;
}

message NotifyAllRequest {}

// NotifyAll is a long running operation.
// https://google.aip.dev/151
message NotifyAllResponse {
    bool has_completed = 1;
}

message NotifyUserRequest {
    string user_email = 1;
    string title = 2;
    string content = 3;
}

message NotifyUserResponse {}
