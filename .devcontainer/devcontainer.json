// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.154.2/containers/docker-existing-dockerfile
{
    "name": "Existing Dockerfile",
    // Sets the run context to one level up instead of the .devcontainer folder.
    "context": "..",
    // Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
    "dockerFile": "Dockerfile",
    // Set *default* container specific settings.json values on container create.
    "settings": {
        "terminal.integrated.defaultProfile.linux": "sh",
        "terminal.integrated.profiles.linux": {
            "zsh": {
                "path": "zsh",
                "args": [
                    "-l"
                ]
            }
        }
    },
    // Add the IDs of extensions you want installed when the container is created.
    "extensions": [
        "golang.go",
        "hashicorp.terraform",
        "redhat.vscode-yaml",
        "zxh404.vscode-proto3",
    ],
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    "forwardPorts": [
        8080
    ],
    // Uncomment the next line to run commands after the container is created - for example installing curl.
    // "postCreateCommand": "apt-get update && apt-get install -y curl",
    // Uncomment when using a ptrace-based debugger like C++, Go, and Rust
    // "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
    // Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
    "mounts": [
        // Command history
        "source=modron-dev-container-state,target=/commandhistory,type=volume",
        // Go tools
        "source=modron-dev-container-state,target=/go/bin,type=volume",
        // VSCode extensions
        "source=modron-dev-container-state,target=/root/.vscode-server/extensions,type=volume",
        "source=modron-dev-container-state,target=/root/.vscode-server-insiders/extensions,type=volume",
        "source=${localEnv:HOME}/.config/gcloud/application_default_credentials.json,target=/root/.config/gcloud/application_default_credentials.json,type=bind"
    ],
    "containerEnv": { "GOOGLE_APPLICATION_CREDENTIALS": "/root/.config/gcloud/application_default_credentials.json" }
    // "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],
    // Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
    // "remoteUser": "vscode"
}
